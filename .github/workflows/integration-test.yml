# Integration Test
#
# This workflow is used to run an integration test on demand.
# An input for the test name needs to be provided.
# TODO: check if the input is "all" , and run all, without a timeout?

name: Integration Test

on:
  workflow_dispatch:
    inputs:
      test_name:
        description: "Which integration to test."
        required: true
        type: string

env:
  AWS_ACCESS_KEY_ID: "dummy"
  AWS_SECRET_ACCESS_KEY: "dummy"
  AXIOM_TOKEN: ${{ secrets.AXIOM_TOKEN }}
  TEST_APPSIGNAL_PUSH_API_KEY: ${{ secrets.TEST_APPSIGNAL_PUSH_API_KEY }}
  CONTAINER_TOOL: "docker"
  DD_ENV: "ci"
  DD_API_KEY: ${{ secrets.DD_API_KEY }}
  RUST_BACKTRACE: full
  TEST_LOG: vector=debug
  VERBOSE: true
  CI: true
  PROFILE: debug

jobs:
  test-integration:
<<<<<<< HEAD
    name: Integration - Linux, ${{ matrix.test }}
    runs-on: [linux, test-runner]
    if: |
      !github.event.pull_request
        || contains(github.event.pull_request.labels.*.name, 'ci-condition: integration tests enable')
    strategy:
      fail-fast: false
      matrix:
        include:
          - test: 'amqp'
          - test: 'apex'
          - test: 'aws'
          # Database container currently fails to start due to failing to validate the license
          #- test: 'axiom'
          - test: 'azure'
          - test: 'clickhouse'
          - test: 'datadog-agent'
          - test: 'datadog-logs'
          - test: 'datadog-metrics'
          - test: 'datadog-traces'
          - test: 'dnstap'
          - test: 'docker-logs'
          - test: 'elasticsearch'
          - test: 'eventstoredb'
          - test: 'fluent'
          - test: 'gcp'
          - test: 'humio'
          - test: 'http-client'
          - test: 'influxdb'
          - test: 'kafka'
          - test: 'logstash'
          - test: 'loki'
          - test: 'mongodb'
          - test: 'mqtt'
          - test: 'nats'
          - test: 'nginx'
          - test: 'opentelemetry'
          - test: 'postgres'
          - test: 'prometheus'
          - test: 'pulsar'
          - test: 'redis'
          - test: 'shutdown'
          - test: 'splunk'
    timeout-minutes: 20
=======
    runs-on: [linux, ubuntu-20.04-4core]
    timeout-minutes: 40
    if: inputs.if || github.event_name == 'workflow_dispatch'
>>>>>>> origin
    steps:
      - name: (PR comment) Get PR branch
        if: ${{ github.event_name == 'issue_comment' }}
        uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

      - name: (PR comment) Checkout PR branch
        if: ${{ github.event_name == 'issue_comment' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Checkout branch
        if: ${{ github.event_name != 'issue_comment' }}
        uses: actions/checkout@v3

      - run: sudo npm -g install @datadog/datadog-ci

      - run: make test-integration-${{ inputs.test_name }}
        env:
          TEST_DATADOG_API_KEY: ${{ secrets.CI_TEST_DATADOG_API_KEY }}

      - name: Upload test results
        run: scripts/upload-test-results.sh
        if: always()

      - run: make test-integration-${{ inputs.test_name }}-cleanup
        if: ${{ always() }}
        env:
          TEST_DATADOG_API_KEY: ${{ secrets.CI_TEST_DATADOG_API_KEY }}
